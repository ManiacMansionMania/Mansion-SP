// Wohnzimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumWohnzimmer].Init(oTuerHalle, hTuerHalle);
	Door[eDoorNumBibliothek].Init(oTuerLibrary, hTuerLibrary);
	//oKronleuchter.Clickable = false;
	
	if ( player.PreviousRoom == 19 && player.InventoryQuantity[iTaschenlampeOn.ID] )
	{
		player.LoseInventory(iTaschenlampeOn);
		PlaySound(60);
		player.AddInventory(iTaschenlampeOff);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerHalle_AnyClick()
{
	if ( Door[eDoorNumWohnzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hTuerLibrary_AnyClick()
{
	if ( Door[eDoorNumBibliothek].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oKronleuchter_AnyClick()
{
	if (any_click_move(315, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht teuer aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Bist du verrückt?");
			player.SayIfIsEdison("Ich zerlege doch nicht unser Haus.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Der funktioniert mit Lichtschalter.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dann wackelt der Leuchter.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Lieber nicht.");
		}
		else Unhandled();
	}
}

function oRadio_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Bestimmt schon sehr alt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Später.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wozu?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			hRadio.Enabled	= true;
			oRoehre.Visible	= false;
			oRadio.Visible	= false;
			PlaySound(5);
		}
		else Unhandled();
	}
}

function oRoehre_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht ziemlich technisch aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Sie sitzt zu fest.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Sitzt wirklcih fest.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das wackelt nichts.");
		}
		else Unhandled();
	}
}

function oTapedeck_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Nett. Scheint aber nur Kassetten abzuspielen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Nicht das Neueste, aber zuverlässig.", "Da ist keine Kassette drin.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schranktür.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			hSchrank.Enabled	= true;
			oTapedeck.Visible	= false;
			oSchrank.Visible	= false;
			PlaySound(5);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte den Schrank verkratzen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hRadio_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Alt, aber es funktioniert.", "Bestimmt schon sehr alt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oRadio.Visible	= true;
			oRoehre.Visible	= true;
			hRadio.Enabled	= false;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hBild_AnyClick()
{
	if (any_click_move(506, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist Schloss Brunwald.");
			Wait(5);
			player.FaceDirection(eDirDown);
			Wait(5);
			player.Say("Um mehr darüber zu erfahren sollten sie INDIANA JONES AND THE LAST CRUSADE spielen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nette Idee.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nette Idee.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nette Idee.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nette Idee.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht damit.");
		}
		else Unhandled();
	}
}

function hCouch_AnyClick()
{
	if (any_click_move(315, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Unsere schöne moderne Couch.", "Gemütlich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.FaceDirection(eDirDown);
			player.Say("Ich möchte mich jetzt nicht hinsetzen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das beschädigt den schönen Stoff.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das hinterlässt Spuren auf dem Boden.");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(131, 133, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schranktür.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			hSchrank.Enabled	= false;
			oTapedeck.Visible	= true;
			oSchrank.Visible	= true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte den Schrank verkratzen.");
		}
		else Unhandled();
	}
}

int Fenster(int l_XPos, int l_YPos)
{
	if (any_click_move(l_XPos, l_YPos, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dunkel ist es draußen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Fenster bleibt zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das Fenster bleibt zu.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Fenster ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hFenster1_AnyClick()
{
	return Fenster(208, 133);
}

function hFenster2_AnyClick()
{
	return Fenster(423, 133);
}


/****************************
*   Regionen-Funktionen
****************************/
