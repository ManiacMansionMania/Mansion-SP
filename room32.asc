// Tresorraum (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Ednas Zimmer");
	Door[eDoorNumEdna].Init(oTuer, hTuer);
	Door[eDoorNumTresorzimmer].Init(null, hNachOben);

	if ( player.PreviousRoom == 33 && player.InventoryQuantity[iTaschenlampeOn.ID] )
	{
		player.LoseInventory(iTaschenlampeOn);
		PlaySound(60);
		player.AddInventory(iTaschenlampeOff);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumEdna].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hNachOben_AnyClick()
{
	if ( Door[eDoorNumTresorzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hPflanze_AnyClick()
{
	if (any_click_move(39, 139, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEdna.SayIfPlayer("Eine schöne Pflanze.");
			cEdna.SayIfPlayer("Passt zu mir.");
			player.SayIfNotEdison("Was diese arme Pflanze alles schon mitansehen musste.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Draussen stehen genug Pflanzen, ich brauche diese nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die könnte etwas Wasser vertragen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nicht mit dieser Pflanze.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Pflanze verträgt kein anderes Plätzchen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist kein Wasser.");
		}
		else Unhandled();
	}
}

function hNachttisch_AnyClick()
{
	if (any_click_move(271, 142, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEdna.SayIfPlayer("Da sind meine Spielzeuge drin.");
			player.SayIfPlayer("Ein Nachtschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der steht da doch gut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein. Jetzt nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			cEdna.SayIfPlayer("Die brauche ich im Moment nicht.");
			player.SayIfPlayer("Abgeschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Zum Nachttisch-Rücken fehlen mir noch zwei Leute.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein legen.");
		}
		else Unhandled();
	}
}

function hSpiegel_AnyClick()
{
	if (any_click_move(92, 131, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich werd' von Tag zu Tag hübscher.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der würde bei dem Versuch kaputt gehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ja, das da bin ich im Spiegel.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das zerbricht nur den Spiegel.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das zerbrechliche Ding fasse ich nicht an.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das beschädigt nur den Spiegel.");
		}
		else Unhandled();
	}
}

function hTelefon_AnyClick()
{
	if (any_click_move(127, 131, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Telefon.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wen sollte ich anrufen?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Telefone verrücken. Mal was anderes.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will nicht anrufen.");
		}
		else Unhandled();
	}
}

function hPortrait_AnyClick()
{
	if (any_click_move(160, 131, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht nett aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche das Portrait nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich betrachte es bereits.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich will keine Bilder verschieben.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das beschädigt nur das Bild.");
		}
		else Unhandled();
	}
}

function hDeckenspiegel_AnyClick()
{
	if (any_click_move(160, 131, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEdna.SayIfPlayer("Der hat mir schon viele gute Dienste geleistet.") )
			{
				player.SayIfPlayer("Wofür braucht man diesen Spiegel?");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da komme ich nicht ran.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wie soll ich diesen Spiegel benutzen?");
		}
		else if (UsedAction(eActOpen) ||UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich komme nicht ran.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dazu reicht mein Arm nicht.");
		}
		else Unhandled();
	}
}

function hBett_AnyClick()
{
	if (any_click_move(160, 131, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("Iiih.");
			cEdna.SayIfPlayer("Da habe ich schon manch' wilde Nacht drin verbracht!");
			cFred.SayIfPlayer("An dieses Bett habe ich schreckliche Erinnerungen.");
			player.SayIfNotEdison("Das ist der Vorhof zur Hölle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( !cEdna.SayIfPlayer("Dann habe ich heute Nacht nichts zum Schlafen.") )
			{
				player.Say("Dieses Bett nicht.");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cEdna.SayIfPlayer("Ich bin nicht müde.") )
			{
				player.Say("Nicht in 100 Jahren.");
			}
		}
		else Unhandled();
	}
}

function hLeiter_AnyClick()
{
	if (any_click_move(316, 137, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Leiter.");
		}
		else Unhandled();
	}
}

function hParfum_AnyClick()
{
	if (any_click_move(60, 131, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEdna.SayIfPlayer("Mein Lieblingsduft.") )
			{
				player.Say("Chanel No. 345.");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich dufte schon richtig dufte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann verschütte ich es nur.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Zerstäuber ist bereits draufgeschraubt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das steht doch gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das brauche ich nicht einduften.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
