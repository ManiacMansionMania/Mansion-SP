// Swimmingpool (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Swimmingpool");
	Door[eDoorNumDraussen].Init(oTuer, hTuer);
	Door[eDoorNumGartentor].Init(oGatter, hGatter);

	if ( gb_SwimmingpoolEmpty )
	{
		hPool.Enabled = false;
		hPoolSessel.Enabled = false;
		RestoreWalkableArea(2);
		region[1].Enabled = true;
		oPool.Visible = true;
		oLeiter.Visible = true;
	}
	else
	{
		hPool.Enabled = true;
		hPoolSessel.Enabled = true;
		RemoveWalkableArea(2);
		region[1].Enabled = false;
		oPool.Visible = false;
		oLeiter.Visible = false;
	}
}

function room_RepExec()
{
	if( IsTimerExpired(1) )
	{
		int int5 = Random(2);
		PlaySound(96);
		int waittime = (int5 + 2) * 40;
		SetTimer(1, waittime);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumDraussen].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hGatter_AnyClick()
{
	if ( Door[eDoorNumGartentor].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oPool_AnyClick()
{
	if (any_click_move(148, 116, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cFred.SayIfIsEdison("Da unten ist noch eine von meinen Maschinen.");
			cEd.SayIfIsEdison("Da unten ist noch eine Maschine von Papa.");
			cEdna.SayIfIsEdison("Da unten ist noch eine Maschine von meinem Schatz.");
			player.SayIfNotEdison("Auf dem Grund sehe ich ein Art Maschine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Hihihi, gute Idee. Leider hapert es an der Umsetzung.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, der Aufschlag am Boden könnte unangenehm werden.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Pool verrückt sich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das schlägt dann am Boden auf und könnte kaputt gehen.");
		}
		else Unhandled();
	}
}

function oLeiter_AnyClick()
{
	if (UsedAction(eActLookAt))
	{
		player.Say("Da geht es runter, in den Pool.");
	}
	else
	{
		any_click_move(293, 120, eDirectionDown);
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hPool_AnyClick()
{
	if (any_click_move(337, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Da entspanne ich immer.", "Cool.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe keine Badesachen.");
			//player.Say("Da komme ich nicht an.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht im Pool unter.");
		}
		else Unhandled();
	}
}

function hLeiter_AnyClick()
{
	if (any_click_move(293, 87, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
			if ( gb_SwimmingpoolEmpty  )
			{
				any_click_move(293, 120, eDirectionDown);
			}
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht stabil aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein, dann kommt man nicht mehr in den Pool.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gb_SwimmingpoolEmpty  )
			{
				any_click_move(293, 120, eDirectionDown);
			}
			else
			{
				player.Say("Ich habe keine Badehose mit.");
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Leiter ist festgemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich die Leiter auch nicht weg.");
		}
		else Unhandled();
	}
}

function hPoolSessel_AnyClick()
{
	if (any_click_move(342, 84, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Pool-Sessel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist zu weit weg.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da kann ich mich jetzt nicht drauf setzen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Da komme ich dann nicht mehr ran.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(11, 158, 37,  eDirectionDown);
}
