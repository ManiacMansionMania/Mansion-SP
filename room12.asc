// Keller (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Im Keller");
	Door[eDoorNumKerker].Init(oTuer, hTuer);
	oLichtschalter.Clickable = false;

	/* Jetzt kommt die Taschenlampe */
	if ( gi_LichtKeller == 0 || gi_LichtKeller == 2 )
	{
		gFlashlight.Visible = true;
		v_Flashlight(false);
		Flashlight.Enabled = true;

		if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
		{
			v_Flashlight(true);
			Flashlight.Enabled = true;
			player.LoseInventory(iTaschenlampeOff);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOn);
			
			oLichtschalter.Clickable = true;
		}
	}
}

function room_Leave()
{
	Flashlight.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumKerker].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oSicherungskasten_AnyClick()
{
	if (any_click_move(79, 126, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da sind viele Sicherungen drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das würde ihn kaputt machen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre einfacher.");
			player.Say("Na gut.");
			PlaySound(5);
			oSicherungskasten.Visible = false;
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist doch schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(5);
			oSicherungskasten.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Sicherungen sitzen fest.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Mit dem offenen Sicherungskasten? Das könnte einen Kurzschluss verursachen.");
		}
		else Unhandled();
	}
}

function oLichtschalter_AnyClick()
{

}


/****************************
*   Hotspot-Funktionen
****************************/
function hSicherungskasten_AnyClick()
{
	if (any_click_move(79, 126, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Sicherungskasten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das würde ihn kaputt machen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre einfacher.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oSicherungskasten.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Mit dem geschlossenen Sicherungskasten?");
		}
		else Unhandled();
	}
}

function hTreppe_AnyClick()
{
if (any_click_move(570, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist eine Treppe.");
		}
		else Unhandled();
	}
}

function hNachOben_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		if ( Door[eDoorNumKeller].i_GlobalInt != 2 )
		{
			any_click_move(570, 24, eDirUp);
		}
		else if ( Door[eDoorNumKeller].i_GlobalInt == 2 )
		{
			region[1].Enabled = false;
			if ( any_click_move(570, 31, eDirUp) )
			{
				player.Say("Die Tür ist verschlossen.");
			}
		}
	}
	else if (UsedAction(eActLookAt))
	{
		Wait(5);
		player.Say("Das ist eine Treppe.");
	}
	else Unhandled();
}

function hHeizung_AnyClick()
{
	if (any_click_move(453, 142, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Das ist die Heizung.", "Wow.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir bei weitem zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die läuft bereits. Ich wüsste nicht, warum ich sie abschalten sollte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazu sehe ich keine Veranlassung.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist verschlossen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die bewegt sich nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist warm.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else Unhandled();
	}
}

function hLichtschalter_AnyClick()
{
	if (any_click_move(549, 138, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Lichtschalter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gi_LichtKeller == 0 ) // Licht aus
			{
				PlaySound(66);
				Flashlight.Enabled = false;
				gi_LichtKeller = 1;

				if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					player.LoseInventory(iTaschenlampeOn);
					player.AddInventory(iTaschenlampeOff);
				}
			}
			else if ( gi_LichtKeller == 1 ) // Licht an
			{
				PlaySound(66);
				Flashlight.Enabled = true;
				v_Flashlight(false);
				gi_LichtKeller = 0;

				if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
				{
					v_Flashlight(true);
					player.LoseInventory(iTaschenlampeOff);
					player.AddInventory(iTaschenlampeOn);
				}
				else if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					v_Flashlight(true);
				}
			}
			else if ( gi_LichtKeller == 2 ) // Licht kaputt
			{
				PlaySound(66);
				Wait(10);
				player.Say("Scheint kaputt zu sein.");
				Wait(10);
				PlaySound(66);
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	if ( Door[eDoorNumKeller].i_GlobalInt != 1 )
	{
		PlaySound(2);
		Door[eDoorNumKeller].i_GlobalInt = 1;
	}
	player.EnterRoom(6, 461, 124, eDirDown);
}
