// Labor 2(Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Labor 2");
	Door[eDoorNumLabor12].Init(oTuerLabor1, hTuerLabor1);
	Door[eDoorNumLabor23].Init(oTuerLabor3, hTuerLabor3);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerLabor1_AnyClick()
{
	if ( Door[eDoorNumLabor12].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hTuerLabor3_AnyClick()
{
	if ( Door[eDoorNumLabor23].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oSchrank_AnyClick()
{
	if (any_click_move(525, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist nichts drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will mich darin aber nicht verstecken.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Tür ist bereits auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(5);
			oSchrank.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Tür ist bereits auf.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das brauche ich noch.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hPepsiautomat_AnyClick()
{
	if (any_click_move(139, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Den haben wir uns mal 'organisiert'.", "Immer diese Schleichwerbung.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da brauche ich eine Sackkarre dazu.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( player.IsEdison() )
			{
				player.Say("Im eigenen Haus fürs Trinken bezahlen?.");
				player.FaceDirection(eDirDown);
				player.Say("Nein danke.");
			}
			else
			{
				player.Say("Da brauche ich Kleingeld für.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich knacke doch keine Automaten.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Scheint zu, zu sein.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das scheint keine Münze zu sein.");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(525, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cFred.SayIfIsEdison("Hier verstecke ich immer Sachen vor Edna und Ed.");
			cEdna.SayIfIsEdison("Hier versteckt mein Schatz immer Sachen vor uns.");
			cEd.SayIfIsEdison("Hier versteckt Papa immer Sachen vor uns.");
			player.SayIfNotEdison("Ein Metallspind.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der sieht schwer aus.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will mich darin aber nicht verstecken.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits geschlossen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Zum Öffnen ziehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte ihn erst öffnen.");
		}
		else Unhandled();
	}
}

function hSchalter_AnyClick()
{
	if (any_click_move(205, 141, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Die sind für die drei Zom-Bi-Natoren.");
			player.SayIfNotEdison("Zwei Hebel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keinen Schalter.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Sie klemmen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Sie klemmen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sie klemmen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt irgendwie nicht.");
		}
		else Unhandled();
	}
}

int ZomBiNator(int l_XPos, int l_YPos,  eDirection l_Direction, String s_Message)
{
	if (any_click_move(l_XPos, l_YPos, l_Direction))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Im Dreier-Pack gab es die günstiger.");
			player.SayIfNotEdison(s_Message);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hZomBiNator1_AnyClick()
{
	if ( player.x <= 299 )
	{
		return ZomBiNator(189, 141, eDirRight, "Das ist der erste Zom-Bi-Nator.");
	}
	else
	{
		return ZomBiNator(395, 141, eDirLeft, "Das ist der erste Zom-Bi-Nator.");
	}
}

function hZomBiNator2_AnyClick()
{
	if ( player.x <= 299 )
	{
		return ZomBiNator(189, 141, eDirRight, "Das ist der zweite Zom-Bi-Nator.");
	}
	else
	{
		return ZomBiNator(395, 141, eDirLeft, "Das ist der zweite Zom-Bi-Nator.");
	}
}

function hZomBiNator3_AnyClick()
{
	if ( player.x <= 299 )
	{
		return ZomBiNator(189, 141, eDirRight, "Das ist der dritte Zom-Bi-Nator.");
	}
	else
	{
		return ZomBiNator(395, 141, eDirLeft, "Das ist der dritte Zom-Bi-Nator.");
	}
}


/****************************
*   Regionen-Funktionen
****************************/
