// Medizinzimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Medizinzimmer");
	Door[eDoorNumMedizinzimmer].Init(oTuer, hTuer);

	/* Jetzt kommt die Taschenlampe */
	if ( gl_LichtMedizinzimmer == 0 || gl_LichtMedizinzimmer == 2 )
	{
		gFlashlight.Visible = true;
		v_Flashlight(false);
		Flashlight.Enabled = true;

		if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
		{
			v_Flashlight(true);
			Flashlight.Enabled = true;
			player.LoseInventory(iTaschenlampeOff);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOn);
		}
	}
}

function room_Leave()
{
	Flashlight.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumMedizinzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oSchublade_AnyClick()
{
	if (any_click_move(110, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Später, vielleicht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			hSchubladeMitte.Enabled = true;
			PlaySound(1);
			oSchublade.Visible = false;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Schublade ist bereits geöffnet.");
		}
		else Unhandled();
	}
}

function oSchranktuer_AnyClick()
{
	if (any_click_move(392, 136, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Medizin, Verbandszeug und jede Menge Pillen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.FaceDirection(eDirDown);
			Wait(5);
			player.Say("Noch geht's mir gut!");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSchranktuer.Visible = false;
			PlaySound(5);
			hSchranktuer.Enabled = true;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Tür ist schon offen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hRiss_AnyClick()
{
	if (any_click_move(70, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hmm, da sollte jemand ein Poster vorhängen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Denk mal nach, ob das Sinn macht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wenn ich Zement hätte, oder einen Rauhputz...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Den Riss vergrößern?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Und mit was soll ich den Riss schließen?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Interessante Idee. Adventure-Charakter verschließt Riss in der Wand.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist weder Zement noch Rauhputz.");
		}
		else Unhandled();
	}
}

function hSchubladen_AnyClick()
{
	if (any_click_move(110, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schubladen über Schubladen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Schublade.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre eine Alternative.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Sie sind abgeschlossen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die sind schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich die Schublade nicht auf.");
		}
		else Unhandled();
	}
}

function hTafel_AnyClick()
{
	if (any_click_move(153, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cFred.SayIfPlayer("Eine meiner präzisen Berechnungen.");
			cEd.SayIfPlayer("Da verstehe ich nichts von.");
			cEdna.SayIfPlayer("Da verstehe ich nichts von.");
			
			player.SayIfNotEdison("Sieht aus wie Formeln,");
			player.SayIfNotEdison("die die Struktur eines Meteoriten beschreiben.");
			if ( !player.IsEdison() )
			{
				player.FaceDirection(eDirDown);
			}
			player.SayIfNotEdison("Das ist ziemlich seltsam.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist an der Wand festgeschraubt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cFred.SayIfPlayer("Sie ist perfekt.") )
			{
				player.Say("Ich wüsste nicht was ich da ergänzen sollte.");
			}
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit lässt sich nicht auf der Tafel schreiben.");
		}
		else Unhandled();
	}
}

function hPlakat_AnyClick()
{
	if (any_click_move(303, 119, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Igitt. Das ist ja scheußlich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein danke, das ist eklig.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie bitte?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) || 
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein, lieber nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

function hSkelett_AnyClick()
{
	if (any_click_move(359, 129, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("So etwas gibt es nur bei uns.", "Der arme Landstreicher.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Neeeiiin.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Dann geht das Skelett möglicherweise kaputt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es klappert leicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das Skelett verweigert die Annahme.");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(392, 136, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( oSchranktuer.Visible )
			{
				player.Say("Medizin, Verbandszeug und jede Menge Pillen.");
			}
			else
			{
				player.Say("So kann ich nicht hineinsehen.");
				player.FaceDirection(eDirDown);
				player.Say("Der Schrank ist zu.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.FaceDirection(eDirDown);
			player.Say("Nutze die Tür.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Tür ist schon geschlossen.");
		}
		else Unhandled();
	}
}

function hSchaedel_AnyClick()
{
	if (any_click_move(359, 129, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Ein schöner Schädel.", "Igitt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt da hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Neeeiiin.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Dann geht der Schädel möglicherweise kaputt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Er klappert leicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das Schädel schüttelt sich. Er will das nicht.");
		}
		else Unhandled();
	}
}

function hDiplom_AnyClick()
{
	if (any_click_move(54, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cFred.SayIfPlayer("Eine meiner vielen Auszeichnungen.");
			cEdna.SayIfPlayer("Die gehört meinem Schatz.");
			cEd.SayIfPlayer("Die gehört Papa.");

			player.SayIfNotEdison("Verliehen an Dr. Fred.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das lasse ich lieber hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das bleibt da, wo es ist.");
		}
		else Unhandled();
	}
}

function hDocDiplom_AnyClick()
{
	if (any_click_move(84, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cFred.SayIfPlayer("Eine meiner vielen Auszeichnungen.");
			cEdna.SayIfPlayer("Die hat mein Schatz sich redlich verdient.");
			cEd.SayIfPlayer("Die gehört Papa.");

			player.SayIfNotEdison("Abschluss im Mumifizieren und Verbinden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das lasse ich lieber hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das bleibt da, wo es ist.");
		}
		else Unhandled();
	}
}

function hSchwamm_AnyClick()
{
	if (any_click_move(119, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit putzt man die Tafel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich hab' heut' kein' Tafeldienst.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht mit einem Schwamm nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich lasse den Schwamm lieber in der Ablage liegen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Lieber nicht.");
		}
		else Unhandled();
	}
}

function hUTisch_AnyClick()
{
	if (any_click_move(216, 136, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Für kleine OPs zwischendurch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche keine Operation.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Tisch hat zwarRollen, doch die sind arretiert.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht zum Tisch.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(70, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Tischlampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da schön stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gl_LichtMedizinzimmer == 0 ) // Licht aus
			{
				PlaySound(66);
				Flashlight.Enabled = false;
				gl_LichtMedizinzimmer = 1;

				if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					player.LoseInventory(iTaschenlampeOn);
					player.AddInventory(iTaschenlampeOff);
				}
			}
			else if ( gl_LichtMedizinzimmer == 1 ) // Licht an
			{
				PlaySound(66);
				Flashlight.Enabled = true;
				v_Flashlight(false);
				gl_LichtMedizinzimmer = 0;

				if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
				{
					v_Flashlight(true);
					player.LoseInventory(iTaschenlampeOff);
					player.AddInventory(iTaschenlampeOn);
				}
				else if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					v_Flashlight(true);
				}
			}
			else if ( gl_LichtMedizinzimmer == 2 ) // Licht kaputt
			{
				PlaySound(66);
				Wait(10);
				player.Say("Scheint kaputt zu sein.");
				Wait(10);
				PlaySound(66);
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hSchubladeMitte_AnyClick()
{
	if (any_click_move(110, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Später, vielleicht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			hSchubladeMitte.Enabled = false;
			PlaySound(1);
			oSchublade.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Schublade ist bereits geschlossen.");
		}
		else Unhandled();
	}
}

function hSchranktuer_AnyClick()
{
	if (any_click_move(392, 136, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Medizin, Verbandszeug und jede Menge Pillen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.FaceDirection(eDirDown);
			Wait(5);
			player.Say("Noch geht's mir gut!");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Tür ist schon geschlossen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSchranktuer.Visible = true;
			PlaySound(5);
			hSchranktuer.Enabled = false;
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
