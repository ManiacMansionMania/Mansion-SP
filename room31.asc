// Grüns Zimmer (Edison Mansion)
int l_Lautsprecher;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Grüns Zimmer");
	Door[eDoorNumGruensZimmer].Init(oLuke, hLuke);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hLuke_AnyClick()
{
	if ( Door[eDoorNumGruensZimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
int Lautsprecher(int l_XPos,  int l_YPos, eDirection l_Dir)
{
	if (any_click_move(l_XPos, l_YPos, l_Dir))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( l_Lautsprecher == 0 )
			{
				player.Say("500 Watt RMS!");
				l_Lautsprecher++;
			}
			else if ( l_Lautsprecher == 1 )
			{
				player.Say("WOW!");
				l_Lautsprecher++;
			}
			else if ( l_Lautsprecher == 2 )
			{
				player.Say("Nochmal 500 Watt!");
				l_Lautsprecher++;
			}
			else if ( l_Lautsprecher == 3 )
			{
				player.Say("Eine große Lautsprecherbox.");
				l_Lautsprecher = 0;
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir bei weitem zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will nicht wissen, was passiert, wenn ich da ein Signal drauf gebe.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da icst nichts von Belange drin.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Box braucht keine Abdeckung.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die kann ich nicht verrücken.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte die Lautsprechermembrane zerstören.");
		}
		else Unhandled();
	}
}

function hLautsprecherLinks_AnyClick()
{
	return Lautsprecher(237, 138, eDirLeft);
}

function hRockposter_AnyClick()
{
	if (any_click_move(256, 135, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("1986?");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche kein Poster.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nicht mit diesem Poster.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte das Poster verschmieren.");
		}
		else Unhandled();
	}
}

function hAnlage_AnyClick()
{
	if (any_click_move(321, 135, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Nicht das Neueste, aber zuverlässig.", "Eine altmodische Anlage.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Kassetten-Spieler. Nicht mehr.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da ist keine Kassette drin.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe keine Kassette zum reintun.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Kassettendeck ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es wird nicht verschoben.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist keine Kassette.");
		}
		else Unhandled();
	}
}

function hPosterMom_AnyClick()
{
	if (any_click_move(382, 135, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cGreen.SayIfPlayer("Mama!") )
			{
				player.Say("Ein schönes Foto.");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche kein Poster.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nicht mit diesem Poster.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte das Poster verschmieren.");
		}
		else Unhandled();
	}
}

function hLautsprecherRechts_AnyClick()
{
	return Lautsprecher(400, 138, eDirRight);
}

function hPoster_AnyClick()
{
	if (any_click_move(577, 137, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hansa_Export!");
			player.FaceDirection(eDirDown);
			player.Say("Live In Köln 2006!");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche kein Poster.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nicht mit diesem Poster.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte das Poster verschmieren.");
		}
		else Unhandled();
	}
}

function hNagel_AnyClick()
{
	if (any_click_move(558, 129, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hier fehlt wohl das Bild zum Nagel!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keinen Nagel.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Einen Nagel benutzt man nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Hahaha.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Später, vielleicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht am Nagel aufhängen.");
		}
		else Unhandled();
	}
}

function hBett_AnyClick()
{
	if (any_click_move(326, 138, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cGreen.SayIfPlayer("Mein Bett.") )
			{
				player.Say("Das ist mal ein langes Bett.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin nicht müde.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das Bett kann man nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Bett kann man nicht schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Äh, nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
