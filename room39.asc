// Raum mit Drähten (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Raum mit Drähten");
	Door[eDoorNumDrahtraum].Init(oLuke, hLuke);
	
	if ( gb_DraehteRepariert )
	{
		hDraehte.Enabled = false;
		oDraehte.Visible = true;
	}

	/* Jetzt kommt die Taschenlampe */
	if ( gl_LichtDrahtraum == 0 || gl_LichtDrahtraum == 2 )
	{
		gFlashlight.Visible = true;
		v_Flashlight(false);
		Flashlight.Enabled = true;

		if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
		{
			v_Flashlight(true);
			Flashlight.Enabled = true;
			player.LoseInventory(iTaschenlampeOff);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOn);
		}
	}
}

function room_Leave()
{
	Flashlight.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hLuke_AnyClick()
{
	if ( Door[eDoorNumDrahtraum].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oDraehte_AnyClick()
{
	if (any_click_move(88, 123, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Endlich wurden die mal repariert.");
			player.SayIfNotEdison("Sieht recht notdürftig geflickt aus.");
			
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die fasse ich nicht an.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Daran kann man nichts anschließen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte das Flickwerk beschädigen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hDraehte_AnyClick()
{
	if (any_click_move(88, 123, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Wurden die nicht schon einmal repariert?");
			player.FaceDirectionIfEdison(eDirDown);
			player.SayIfIsEdison("Seltsam.");
			
			player.SayIfNotEdison("Diese offenen Drähte sehen gefährlich aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dann mal los.");
			oDraehte.Visible = true;
			hDraehte.Enabled = false;
			gb_DraehteRepariert = true;
		}
		else Unhandled();
	}
}

function hBretter_AnyClick()
{
	if (any_click_move(226, 123, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Der Raum war zu hell.");
			player.SayIfNotEdison("Das Fenster ist zugenagelt.");
			player.SayIfNotEdison("Ich kann nichts sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind gut zugenagelt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich brauche kein Brett.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Bretter knarren.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich die Bretter auch nicht los.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(110, 123, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Lampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da schön stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gl_LichtDrahtraum == 0 ) // Licht aus
			{
				PlaySound(66);
				Flashlight.Enabled = false;
				gl_LichtDrahtraum = 1;

				if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					player.LoseInventory(iTaschenlampeOn);
					player.AddInventory(iTaschenlampeOff);
				}
			}
			else if ( gl_LichtDrahtraum == 1 ) // Licht an
			{
				PlaySound(66);
				Flashlight.Enabled = true;
				v_Flashlight(false);
				gl_LichtDrahtraum = 0;

				if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
				{
					v_Flashlight(true);
					player.LoseInventory(iTaschenlampeOff);
					player.AddInventory(iTaschenlampeOn);
				}
				else if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					v_Flashlight(true);
				}
			}
			else if ( gl_LichtDrahtraum == 2 ) // Licht kaputt
			{
				PlaySound(66);
				Wait(10);
				player.Say("Scheint kaputt zu sein.");
				Wait(10);
				PlaySound(66);
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
