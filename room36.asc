// Bad (Edison Mansion)
bool	b_WasserAn;
bool	b_DuscheAn;
AudioChannel *channel95;
AudioChannel *channel12;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Bad");
	Door[eDoorNumBad].Init(oTuer, hTuer);
	
	if ( b_WasserAn )
	{
		channel95 = aSound95.Play(eAudioPriorityNormal, eRepeat);
		channel95.SetRoomLocation(70, 63);
	}
	
	if ( b_DuscheAn )
	{
		channel12 = aSound12.Play(eAudioPriorityNormal, eRepeat);
		channel12.SetRoomLocation(269, 62);
	}
}

function room_FirstLoad()
{
	hVorhang.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
*
***************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumBad].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oKlodeckel_AnyClick()
{
	if (any_click_move(67, 139, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich glaube da unten schwimmt was.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann man nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich muss nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Deckel ist bereits geöffnet.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(5);
			oKlodeckel.Visible = false;
			hKlodeckel.Enabled = true;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist am Klo festgemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht das Klo herunterspülen.");
		}
		else Unhandled();
	}
}

int Vorhang(int l_XPos, int l_YPos, eDirection l_Dir)
{
	if (any_click_move(l_XPos, l_YPos, l_Dir))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der verhindert unangenehme Augenblicke.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oVorhangOffen3.Visible = false;
			PlaySound(37);
			Wait(7);
			oVorhangOffen2.Visible = false;
			PlaySound(37);
			Wait(7);
			oVorhangOffen1.Visible = false;
			PlaySound(37);
			hVorhang.Enabled = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist schon zu gezogen.");
		}
		else Unhandled();
	}
}

function oVorhangOffen1_AnyClick()
{
	return Vorhang(236, 127, eDirUp);
}

function oVorhangOffen2_AnyClick()
{
	return Vorhang(236, 127, eDirUp);
}

function oVorhangOffen3_AnyClick()
{
	return Vorhang(236, 127, eDirUp);
}

function oWasser_AnyClick()
{

}

function oDuschwasser_AnyClick()
{

}

function oDuschhahn_AnyClick()
{
	if (any_click_move(299, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Hahn für den Duschkopf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			if ( b_DuscheAn  && (UsedAction(eActClose) || UsedAction(eActUse)) )
			{
				if ( channel12 )
				{
					channel12.Stop();
					oDuschwasser.Visible = false;
				}
				b_DuscheAn = false;
			}
			else if ( !b_DuscheAn && (UsedAction(eActOpen) || UsedAction(eActUse)) )
			{
				oDuschwasser.Visible = true;
				oDuschwasser.SetView(59);
				oDuschwasser.Animate(1, 0, eRepeat, eNoBlock);
				channel12 = aSound95.Play(eAudioPriorityNormal, eRepeat);
				channel12.SetRoomLocation(269, 62);
				b_DuscheAn = true;
			}
			else
			{
				player.Say("Versuch's mal anders herum.");
			}
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hKlodeckel_AnyClick()
{
	if (any_click_move(67, 139, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht gemütlich aus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann man nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich muss nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oKlodeckel.Visible = true;
			hKlodeckel.Enabled = false;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Deckel ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist am Klo festgemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht das Klo herunterspülen.");
		}
		else Unhandled();
	}
}

function hSpuelkasten_AnyClick()
{
	if (any_click_move(67, 139, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kann man sicherlich gut was drin verstecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann läuft das angesammelte Wasser heraus.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da möchte ich nichts reinlegen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da komme ich so nicht ran.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Deckel ist doch drauf.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das passt schon so.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Davon wird der auch nicht schöner.");
		}
		else Unhandled();
	}
}

function hSpuelung_AnyClick()
{
	if (any_click_move(62, 127, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist zum Spülen der Toilette.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(38);
			if ( oKlodeckel.Visible )
			{
				player.Say("Das Wasser strudelt richtig schön.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dann habe ich einen Teil der Kette. Und dann?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Kette hat sauber geschmiedete Glieder. Da braucht keines geschlossen zu werden.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Kette wackelt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(71, 111, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da sind Haare im Becken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			if ( b_WasserAn  && (UsedAction(eActClose) || UsedAction(eActUse)) )
			{
				if ( channel95 )
				{
					channel95.Stop();
					oWasser.Visible = false;
				}
				b_WasserAn = false;
			}
			else if ( !b_WasserAn && (UsedAction(eActOpen) || UsedAction(eActUse)) )
			{
				oWasser.Visible = true;
				oWasser.SetView(59);
				oWasser.Animate(0, 0, eRepeat, eNoBlock);
				channel95 = aSound95.Play(eAudioPriorityNormal, eRepeat);
				channel95.SetRoomLocation(70, 63);
				b_WasserAn = true;
			}
			else
			{
				player.Say("Versuch's mal anders herum.");
			}
		}
		else Unhandled();
	}
}

function hSpiegel_AnyClick()
{
	if (any_click_move(71, 111, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin ja so hübsch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist mir zu unsicher.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dahinter ist nichts.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das lässt der Spiegel nicht zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dazu ist der Spiegel zu fest gemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht mit diesem Spiegel.");
		}
		else Unhandled();
	}
}

function hVorhang_AnyClick()
{
	if (any_click_move(236, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der verhindert unangenehme Augenblicke.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			oVorhangOffen1.Visible = true;
			PlaySound(37);
			Wait(7);
			oVorhangOffen2.Visible = true;
			PlaySound(37);
			Wait(7);
			oVorhangOffen3.Visible = true;
			PlaySound(37);
			Wait(7);
			hVorhang.Enabled = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hBadewanne_AnyClick()
{
	if (any_click_move(236, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Wird selten genutzt.", "Wird wohl nicht oft benutzt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das dreckige Ding?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Ich brauche jetzt kein Bad.", "Ich bade nicht bei den Edisons.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das braucht nicht gebadet zu werden.");
		}
		else Unhandled();
	}
}

function hSpruch_AnyClick()
{
	if (any_click_move(236, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cEdna )
			{
				player.Say("Also Leute.");
				player.FaceDirection(eDirDown);
				player.Say("Ruft - mich - an!");
			}
			else
			{
				player.Say("Die Nummer merk ich mir.");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit geht er nicht von der Wand ab.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/