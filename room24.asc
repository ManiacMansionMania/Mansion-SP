// Flur 1. Stock (2) (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Flur 1. Stock (2)");
	Door[eDoorNumSicherheitstuer].Init(oSicherheitstuer, hSicherheitstuer);
	Door[eDoorNumMedizinzimmer].Init(oMedizintuer, hMedizintuer);
	Door[eDoorNumSpielzimmer].Init(oSpieltuer, hSpieltuer);

	if ( !gb_TreppenErsterStockZweiterStock )
	{
		oSchild.Visible = true;
		RemoveWalkableArea(2);
		region[1].Enabled = false;
	}
	
	if ( player.PreviousRoom == 25 && player.InventoryQuantity[iTaschenlampeOn.ID] )
	{
		player.LoseInventory(iTaschenlampeOn);
		PlaySound(60);
		player.AddInventory(iTaschenlampeOff);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hSicherheitstuer_AnyClick()
{
	if ( Door[eDoorNumSicherheitstuer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hMedizintuer_AnyClick()
{
	if ( Door[eDoorNumMedizinzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hSpieltuer_AnyClick()
{
	if ( Door[eDoorNumSpielzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function Bilder(int x, int y,  CharacterDirection dir)
{
	if (any_click_move(x, y, dir))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("So etwas gibt es nur hier.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nett.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bleibt da hängen und wird nicht verrückt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else Unhandled();
	}
}


function hBild1_AnyClick()
{
	return Bilder(74,  132,  eDirectionLeft);
}

function hBild2_AnyClick()
{
	return Bilder(223,  132,  eDirectionUp);
}

function hBild3_AnyClick()
{
	return Bilder(417,  132,  eDirectionUp);
}

function hTafel_AnyClick()
{
	if (any_click_move(188, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Tür steht auf manuellen Betrieb.");
			player.FaceDirection(eDirectionDown);
			player.Say("Dann brauche ich hier nichts eingeben.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Tür steht auf manuellen Betrieb.");
			player.Say("Es besteht kein Grund für einen Eingriff.");
		}
		else Unhandled();
	}
}

function hPortrait_AnyClick()
{
	if (any_click_move(340, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("Das bin ja ich.");
			cFred.SayIfPlayer("Mein nichtsnutziger Sohn.");
			cEdna.SayIfPlayer("Das bin ja ich.");
			cEdna.SayIfPlayer("Er war ja so süss.");
			
			player.SayIfNotEdison("Ed Junior.");
			Wait(5);
			player.SayIfNotEdison("Süss!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nett.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bleibt da hängen und wird nicht verrückt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else Unhandled();
	}
}

function hStatue_AnyClick()
{
	if (any_click_move(131, 139, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Kommt direkt aus dem Louvre.");
			player.SayIfNotEdison("Vielleicht ist irgendwo eine Plakette.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir viel zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie bitte.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hTreppe2_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		if ( oSchild.Visible )
		{
			if (any_click_move(617, 137, eDirectionUp))
			{
				player.Say("Da kann ich nicht hin.");
			}
		}
		else
		{
			if (any_click_move(572, 29, eDirectionUp))
			{
			}
		}
	}
	else if (UsedAction(eActLookAt) && !gb_TreppenErsterStockZweiterStock )
	{
		if (any_click_move(617, 137, eDirectionUp))
		{
			player.Say("Da kann ich nicht hin.");
		}
	}
	else if (UsedAction(eActLookAt) && !gb_TreppenErsterStockZweiterStock )
	{
		if (any_click_move(617, 137, eDirectionUp))
		{
			player.Say("Da geht es in's zweite Stockwerk.");
		}
	}
	else Unhandled();
}

function hTreppe1_AnyClick()
{
	if (any_click_move(617, 137, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !gb_TreppenErsterStockZweiterStock )
			{
				player.Say("Da kann ich nicht hin.");
			}
			else
			{
				player.Say("Das ist die Treppe.");
			}
		}
		else Unhandled();
	}
}

function hPlakette_AnyClick()
{
	if (any_click_move(131, 139, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Mmmh.");
			player.SayIfNotEdison("Si trouve, envoyez-le au Louvre, poste paye.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist am Stein festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Plaketten schaut man an.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich die Plakette nicht polieren.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(27, 427, 128, eDirectionLeft);
}
