// Unter dem Haus(Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Unter dem Haus");
	Door[eDoorNumGitter].Init(oGitter, hGitter);
	
	if ( gb_SwimmingpoolEmpty )
	{
		SetTimer(1, 1);
		oHaupthahn.Visible = false;
	}
	else
	{
		oHaupthahn.Visible = true;
	}
	
	oHaupthahn.Clickable = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hGitter_AnyClick()
{
	if ( Door[eDoorNumGitter].ClickSpecial(31, 5, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/


/****************************
*   Hotspot-Funktionen
****************************/
function hGitterVorratsraum_AnyClick()
{
	if (any_click_move(542, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Da ist unser Abstellraum.", "Ich sehe einen Raum mit einem Regal.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist verschweißt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das ist zugeschweißt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist doch geschlossen!");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es bewegt sich keinen Zentimeter.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Davon wird das Gitter auch nicht lockerer.");
		}
		else Unhandled();
	}
}

function hHaupthahn_AnyClick()
{
	if (any_click_move(794, 124, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( gb_SwimmingpoolEmpty && gb_CanEmptySwimmingpool )
			{
				player.SayIfIsEdison("Der Pool müsste jetzt leer sein.");
				player.SayIfNotEdison("Irgendwo ließ dieser Hahn Wasser ab.");
			}
			else
			{
				player.SayIfNotEdison("Damit stellt man Wasser ab.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dazu brauche ich Spezialwerkzeug.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( oHaupthahn.Visible )
			{ 
				// Haupthahnen schließen
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				oHaupthahn.Visible = false;
				player.Say("Es fließt jetzt kein Wasser mehr.");
				
				// Wenn Swimmingpool geleert werden kann, dann wieder füllen
				if ( gb_CanEmptySwimmingpool )
				{
					gb_SwimmingpoolEmpty = true;
				}
			}
			else
			{
				// Haupthahn öffnen
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				oHaupthahn.Visible = true;
				player.Say("Das Wasser fließt jetzt.");
				
				// Wenn Swimmingpool geleert werden kann, dann leeren
				if ( gb_CanEmptySwimmingpool )
				{
					if ( IsTimerExpired(1) )
					{
						PlaySound(102);
						SetTimer(1, 1000);        
					}
					gb_SwimmingpoolEmpty = false;
				}
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( oHaupthahn.Visible )
			{ 
				player.Say("Der Hahn ist bereits offen.");
			}
			else
			{
				// Haupthahn öffnen
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				oHaupthahn.Visible = true;
				player.Say("Das Wasser fließt jetzt.");
				
				// Wenn Swimmingpool geleert werden kann, dann leeren
				if ( gb_CanEmptySwimmingpool )
				{
					if ( IsTimerExpired(1) )
					{
						PlaySound(102);
						SetTimer(1, 1000);        
					}
					gb_SwimmingpoolEmpty = false;
				}
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oHaupthahn.Visible )
			{ 
				// Haupthahnen schließen
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				PlaySound(31);
				Wait(40);
				oHaupthahn.Visible = false;
				player.Say("Es fließt jetzt kein Wasser mehr.");
				
				// Wenn Swimmingpool geleert werden kann, dann wieder füllen
				if ( gb_CanEmptySwimmingpool )
				{
					gb_SwimmingpoolEmpty = true;
				}
			}
			else
			{
				player.Say("Der Hahn ist bereits zu.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich will den Hahn nicht abbrechen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt damit nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
