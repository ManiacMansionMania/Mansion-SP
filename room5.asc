// Vor der Villa (Edison Villa - Mansion)
int rand			= 0;
int waittime	= 0;

/****************************
*   Raum-Funktionen
****************************/
function room_FirstLoad()
{
	String seperator = String.Format("\\ **** Vor der Villa");
	hGitter.Enabled = false;

	gAction.Visible = true;
	gMaingui.Visible = true;  
	gBorder.Visible = true;
	Mouse.Visible = true;
}

function room_Load()
{
	Door[eDoorNumHaustuer].Init(oTuer, hTuer);
	Door[eDoorNumGitter].Init(oDurchgang, hGitter);
	
	if ( gi_Grabsteine == 3 )
	{
		oGrabstein01.Visible = true;
		oGrabstein02.Visible = true;
		oGrabstein03.Visible = true;
	}
	else if ( gi_Grabsteine == 2 )
	{
		oGrabstein01.Visible = true;
		oGrabstein02.Visible = true;
		oGrabstein03.Visible = false;
	}
	else if ( gi_Grabsteine == 1 )
	{
		oGrabstein01.Visible = true;
		oGrabstein02.Visible = false;
		oGrabstein03.Visible = false;
	}
	else
	{
		oGrabstein01.Visible = false;
		oGrabstein02.Visible = false;
		oGrabstein03.Visible = false;
	}
	SetTimer(1, 1);
}

function room_RepExec()
{
	if ( IsTimerExpired(1) )
	{
		rand = Random(2);
		PlaySound(96);
		waittime = (rand + 2) * 40;
		SetTimer(1, waittime);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumHaustuer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hGitter_AnyClick()
{
	if ( player.IsEdison() == true )
	{
		Door[eDoorNumGitter].s_LookAt				= "Da geht es unter das Haus.";
		Door[eDoorNumGitter].s_WrongItem		= "Damit kriege ich das Gitter nicht auf.";
		Door[eDoorNumGitter].s_IsLocked			= "Das Gitter geht nicht auf.";
	}
	else
	{
		Door[eDoorNumGitter].s_LookAt				= "Das ist ein Gitter.";
		Door[eDoorNumGitter].s_WrongItem		= "Damit kriege ich das Gitter nicht auf.";
		Door[eDoorNumGitter].s_IsLocked			= "Das Gitter geht nicht auf.";
	}
	
	if ( Door[eDoorNumGitter].ClickSpecial(31, 5, 1000, 0) == 0 ) Unhandled();
}

/****************************
*   Objekt-Funktionen
****************************/
function oBusch_AnyClick()
{
	if (any_click_move(273, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Den haben wir gepflanzt um das Gitter zu verdecken.");
			player.SayIfNotEdison("Der scheint was zu verdecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			//player.Say("Der ist gut verwurzelt. Dafür braucht es mehr als Muskelschmalz.");
			PlaySound(103);
			Wait(70);
			oBusch.Visible = false;
			hGitter.Enabled = true;
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Der ist zu klein um sich dahinter zu verstecken.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das lässt der Busch nicht mit sich machen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Busch sticht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist keine Edison-Gartenschere.");
		}
		else Unhandled();
	}
}

function oFaehnchenOben_AnyClick()
{
	if (any_click_move(42, 141, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit wird signalisiert ob etwas im Briefkasten ist.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann weiß man nicht mehr, ob Post da ist.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oFaehnchenOben.Visible = false;
			oFaehnchenUnten.Visible = true;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

function oFaehnchenUnten_AnyClick()
{
	if (any_click_move(42, 141, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit wird signalisiert ob etwas im Briefkasten ist.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann weiß man nicht mehr, ob Post da ist.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oFaehnchenOben.Visible = true;
			oFaehnchenUnten.Visible = false;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

function oFussmatte_AnyClick()
{
	if (any_click_move(402, 107, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hier versteckten wir früher oft den Haustürschlüssel.");
			player.SayIfIsEdison("Nicht wirklich ein gutes Versteck.");

			player.SayIfNotEdison("Ein gutes Versteck für einen Schlüssel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das dreckige Ding nehme ich nicht mit.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(4);
			oFussmatte.Visible = false;
			hFussmatte.Enabled = true;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Fußmatte ist bereits zurückgezogen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht darunter legen.");
		}
		else Unhandled();
	}
}

function oBriefkastenZu_AnyClick()
{
	if (any_click_move(42, 141, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player.IsEdison() )
			{
				cEd.SayIfPlayer("Bis heute warte ich auf mein Paket.");
				if ( player != cEd )
				{
					player.Say("Unser Briefkasten.");
				}
			}
			else
			{
				player.Say("Ein typisch amerikanischer Briefkasten.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der Briefkasten wird noch gebraucht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oBriefkastenZu.Visible = false;
			oBriefkastenAuf.Visible = true;	
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

function oBriefkastenAuf_AnyClick()
{
	if (any_click_move(42, 141, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der Briefkasten wird noch gebraucht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oBriefkastenZu.Visible = true;
			oBriefkastenAuf.Visible = false;	
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

int Grabstein(int l_XPos, int l_YPos, String s_Message)
{
	if (any_click_move(l_XPos, l_YPos, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hier ruht \"%s\".", s_Message);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mit zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("und mir mein eigenes Grab schaufeln?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich will das Grab nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Grab ist bereits seit mehreren Jahren geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Grabstein bewegt sich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Auf ein Grab passen nur Blumen. Geranien.");
		}
		else Unhandled();
	}
}

function oGrabstein01_AnyClick()
{
	return Grabstein(718, 134, Game.GlobalStrings[1]);
}

function oGrabstein02_AnyClick()
{
	return Grabstein(761, 134, Game.GlobalStrings[2]);
}

function oGrabstein03_AnyClick()
{
	return Grabstein(803, 134, Game.GlobalStrings[3]);
}


/****************************
*   Hotspot-Funktionen
****************************/
function hKlingel_AnyClick()
{
	if (any_click_move(357, 98, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hiermit können uns nervige Kinder belästigen.");
			player.SayIfNotEdison("Die Türklingel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(15);
			PlaySound(99);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Klingel kann man nicht ohne Werkzeug öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sit bereits zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich komme nicht ran.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			//player.Say("Eine Klingel sollte man drücken.");
			PlaySound(99);
		}
		else Unhandled();
	}
}

function hSchild_AnyClick()
{
	if (any_click_move(467, 141, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Was suchen wir eigentlich?", "Aushilfe gesucht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist innen an der Scheibe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Stelle annehmen?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Schild ist von außen nicht erreichbar.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else Unhandled();
	}
}

function hEinfahrt_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		if (any_click_move(956, 12, eDirRight))
		{
		}
	}
	else if (any_click_move(946, 12, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Unsere Einfahrt.", "Die Einfahrt zum Edison-Mansion.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich könnte etwas Staub vom Boden aufheben, mehr aber nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nur mit dem Auto.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) 
		      || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das lässt die Einfahrt nicht mit sich machen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das auf die Einfahrt zu legen macht keinen Sinn.");
		}
		else Unhandled();
	}
}

function hFussmatte_AnyClick()
{
	if (any_click_move(402, 107, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Hier versteckten wir früher oft den Haustürschlüssel.");
			player.SayIfIsEdison("Nicht wirklich ein gutes Versteck.");

			player.SayIfNotEdison("Ein gutes Versteck für einen Schlüssel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das dreckige Ding nehme ich nicht mit.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(4);
			oFussmatte.Visible = true;
			hFussmatte.Enabled = false;
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Fußmatte liegt bereits gerade.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht darunter legen.");
		}
		else Unhandled();
	}
}

function hGitterSchild_AnyClick()
{
	if (any_click_move(940, 130, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			int ran1=Random(9);
			int ran2=Random(9);
			int ran3=Random(9);
			int ran4=Random(9);
						
			if ( player.IsEdison() )
			{
				player.Say("Unsere Adresse, ...");
			}
			player.Say("%d%d%d%d Cemetery Lane.", ran1, ran2, ran3, ran4);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Schild ist festgeschraubt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und mit was bitte?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich könnte es mit einem alkohol-getränkten Lappen abputzen, aber nicht damit.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(41, 15, 134);
}
