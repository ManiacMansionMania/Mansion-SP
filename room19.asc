// Bibliothek (Edison Mansion)
int		l_StairsUsed;
bool	b_LightOff;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Bibliothek");
	Door[eDoorNumBibliothek].Init(oTuer, hTuer);
	
	/* Jetzt kommt die Taschenlampe */
	if ( gl_LichtBibliothek == 0 || gl_LichtBibliothek == 2 )
	{
		gFlashlight.Visible = true;
		v_Flashlight(false);
		Flashlight.Enabled = true;

		if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
		{
			v_Flashlight(true);
			Flashlight.Enabled = true;
			player.LoseInventory(iTaschenlampeOff);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOn);
		}
	}
}

function room_Leave()
{
	Flashlight.Enabled = false;
}

function room_FirstLoad()
{
	l_StairsUsed	= 0;
	b_LightOff		= !gl_LichtBibliothek;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumBibliothek].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oPlatte_AnyClick()
{
	if (any_click_move(525, 117, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mmmh.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ha ha.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			oPlatte.Visible = false;
			hPlatte.Enabled = true;
			PlaySound(5);
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
int Lampe(int l_XPos, int l_YPos, eDirection l_Dir)
{
	if (any_click_move(l_XPos, l_YPos, l_Dir))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Stehlampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da schön stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gl_LichtBibliothek == 0 ) // Licht aus
			{
				PlaySound(66);
				Flashlight.Enabled = false;
				gl_LichtBibliothek = 1;

				if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					player.LoseInventory(iTaschenlampeOn);
					player.AddInventory(iTaschenlampeOff);
				}
			}
			else if ( gl_LichtBibliothek == 1 ) // Licht an
			{
				PlaySound(66);
				Flashlight.Enabled = true;
				v_Flashlight(false);
				gl_LichtBibliothek = 0;

				if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
				{
					v_Flashlight(true);
					player.LoseInventory(iTaschenlampeOff);
					player.AddInventory(iTaschenlampeOn);
				}
				else if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					v_Flashlight(true);
				}
			}
			else if ( gl_LichtBibliothek == 2 ) // Licht kaputt
			{
				PlaySound(66);
				Wait(10);
				player.Say("Scheint kaputt zu sein.");
				Wait(10);
				PlaySound(66);
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}


function hLampe1_AnyClick()
{
	// Taschenlampenskript
	return Lampe(107, 125, eDirUp);
}

function hLampe2_AnyClick()
{
	// Taschenlampenskript
	return Lampe(553, 125, eDirRight);
}

function hTreppe_AnyClick()
{
	if (any_click_move(250, 136, eDirRight))
	{
		if (UsedAction(eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
			if (any_click_move(314, 140, eDirUp))
			{
				if ( l_StairsUsed >= 2 )
				{
					Wait(5);
					player.Say("Da kann ich nicht hoch, das ist zu gefährlich.");
				}
				else if ( !b_LightOff && ((l_StairsUsed == 0) || (l_StairsUsed == 1)) )
				{
					Wait(20);
					player.FaceDirection(eDirDown);
					Wait(5);
					player.Say("Betreten verboten! Treppe ist baufällig.");
					l_StairsUsed++;
				}
				else if ( !b_LightOff && l_StairsUsed == 2 )
				{
					Wait(5);
					player.Say("Betreten verboten! Treppe ist baufällig.");
					l_StairsUsed++;
				}
				else if ( b_LightOff )
				{
					Wait(5);
					player.Say("Ich kann nichts sehen, es ist zu dunkel.");
				}
			}
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Ich habe vergessen wo diese Treppe eigentlich hinführt.");
			player.SayIfNotEdison("Wo die wohl hinführt?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht so nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nette Idee.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da ist keine Klappe zum schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else Unhandled();
	}
}

function hTelefon_AnyClick()
{
	if (any_click_move(512, 140, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Telefon.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich wüsste nicht wen ich anrufen sollte.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht wen ich anrufen sollte.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das hat keine Batterien.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das brauche ich nicht.");
		}
		else Unhandled();
	}
}

function hSessel_AnyClick()
{
	if (any_click_move(512, 140, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Gemütlich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Hach ja, hinsetzen. Das wäre mal was.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das hat der Sessel nicht verdient.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dazu schaut er mir zu schwer aus.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Und dann?");
		}
		else Unhandled();
	}
}

function hSchild_AnyClick()
{
	if (any_click_move(314, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !b_LightOff ) // Licht an
			{
				player.Say("Betreten verboten.");
			}
			else
			{
				player.Say("Ich kann es nicht lesen, es ist zu dunkel.");
			}
		}
		else Unhandled();
	}
}

function hPlatte_AnyClick()
{
	if (any_click_move(525, 117, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mmmh.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			hPlatte.Enabled = false;
			PlaySound(1);
			oPlatte.Visible = true;
			
			if ( !player.HiddenPlateFound() )	// Platte noch nie geöffnet. (Achtung im Multiplayer über Array festlegen)
			{
				Wait(15);
				player.FaceDirection(eDirDown);
				player.Say("Da ist ein Geheimfach dahinter.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("So nicht.");
		}
		else Unhandled();
	}
}

function hChuck_AnyClick()
{
	if (any_click_move(525, 117, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !player.SayIfIsEdison("Das ist Chuck, die Pflanze.") && 
					 !player.SayIfIsEdison("Einen Ableger davon haben wir mal Bernhard geschenkt.") && 
					 !cBernard.SayIfPlayer("So eine habe ich auch zu Hause.") && 
					 !cBernard.SayIfPlayer("Ein Geschenk der Edisons.") )
			{
				player.Say("Eine stinknormale Zimmerpflanze.");
				player.Say("Langweilig.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich könnte sie gießen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) ||
						 UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das lässt die Pflanze nicht mit sich machen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist kein Wasser.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
