// Kaminzimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Kaminzimmer");
	Door[eDoorNumKaminzimmer].Init(oTuerFlur, hTuerFlur);
	Door[eDoorNumTeleskopzimmer].Init(oLukeAuf, hLuke);
	Door[eDoorNumDrahtraum].Init(oTuerDraht, hTuerDraht);

	oPortrait.Clickable = false; // Wird über hPortrait abgehandelt

	if ( gb_PortraitIsReal )
	{
		oPortrait.Visible = false;
	}
	
	if ( player.PreviousRoom == 39 && player.InventoryQuantity[iTaschenlampeOn.ID] )
	{
		player.LoseInventory(iTaschenlampeOn);
		PlaySound(60);
		player.AddInventory(iTaschenlampeOff);
	}
	
	if ( gb_PlantGrow )
	{
		oBlumentopf.Visible = true;
	}
	
	if ( gi_KaminzimmerOptions == eKaminWithoutAll )
	{
		SetBackgroundFrame(1);
		RemoveWalkableArea(2);
		hTuerDraht.Enabled = false;
		hKletterpflanze.Enabled = false;
		hLuke.Enabled = false;
		oBlumentopf.Visible = true;
	}
	else if ( gi_KaminzimmerOptions == eKaminWithPlant )
	{
		SetBackgroundFrame(2);
		hTuerDraht.Enabled = false;
		oBlumentopf.Visible = false;
	}
	else if ( gi_KaminzimmerOptions == eKaminWithDoor )
	{
		SetBackgroundFrame(3);
		RemoveWalkableArea(2);
		hKletterpflanze.Enabled = false;
		hLuke.Enabled = false;
		oBlumentopf.Visible = true;
	}
	else if ( gi_KaminzimmerOptions == eKaminWithAll )
	{
		SetBackgroundFrame(0);
		oBlumentopf.Visible = false;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerFlur_AnyClick()
{
	if ( Door[eDoorNumKaminzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hTuerDraht_AnyClick()
{
	if ( Door[eDoorNumDrahtraum].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hLuke_AnyClick()
{
	if ( Door[eDoorNumTeleskopzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oBlumentopf_AnyClick()
{
	if (any_click_move(278, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( gb_PlantGrow )
			{
				player.Say("Hier ist Erde drin.");
			}
			else
			{
				player.Say("Hier war wohl mal eine Pflanze drin.");
			}
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iDuenger )
			{
				//player.Say("");
				oPlantGrow.Visible = true;
				PlaySound(33);
				Wait(40);
				player.LoseInventory(iDuenger);
				oPlantGrow.SetView(60);
				oPlantGrow.Animate(0, 10, eOnce, eBlock);
				
				if ( gi_KaminzimmerOptions == eKaminWithoutAll )
				{
					gi_KaminzimmerOptions = eKaminWithPlant;
				}
				else if ( gi_KaminzimmerOptions == eKaminWithDoor )
				{
					gi_KaminzimmerOptions = eKaminWithAll;
				}
				
				RestoreWalkableArea(2);
				hLuke.Enabled = true;
				
				gb_PlantGrow = false;
				oBlumentopf.Visible = false;
			}
			else
			{
			}
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hSchreibmaschine_AnyClick()
{
	if (any_click_move(217, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Mit dieser modernen Maschine schreiben wir unsere Briefe.", 
																"Altmodisch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Die wird selten gebraucht. Also lasse ich sie da stehen.", 
																"Die ist mir zu alt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da ist kein Papier drin.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die muss nicht repariert werden.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das hat keinen Zweck.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das sieht nicht nach passendem Papier aus.");
		}
		else Unhandled();
	}
}

function hBild_AnyClick()
{
	if (any_click_move(142, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
				if ( oPortrait.Visible )
				{
					player.Say("Ein schönes Portrait. Es passt genau.");
				}
				else
				{
					player.SayIfIsEdison("Ein schönes Foto von uns.");
					player.SayIfNotEdison("Alle 3, ääh 4 zusammen.");
				}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.SayIfIsEdison("Dann sieht man den Fleck dahinter.");
			player.SayIfNotEdison("Das brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich betrachte das Bild bereits.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("So nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Bild passt da doch ganz gut hin.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte das Bild beschädigen.");
		}
		else Unhandled();
	}
}

function hKamin_AnyClick()
{
	if (any_click_move(142, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Für die gemütlichen Abende.");
			player.SayIfNotEdison("Gemütlich im Winter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Und wie genau stelle ich das an?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, mir ist schon warm.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Kamin ist immer offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Kamin hat eine offene Feuerstelle und kein Gitter davor.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Benutz' dein Hirn und denk mal darüber genau nach, ob das geht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("... dann ein Feuer machen und verbrennen?");
		}
		else Unhandled();
	}
}

function hPflanze_AnyClick()
{
	if (any_click_move(78, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schön.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Pflanze.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dazu sage ich jetzt lieber nichts.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich könnte sie entlauben ...");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die steht da gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das gießt die Pflanze nicht.");
		}
		else Unhandled();
	}
}

function hKletterpflanze_AnyClick()
{
	if (any_click_move(277, 128, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schön.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Pflanze. Besonders nicht diese.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dazu sage ich jetzt lieber nichts.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich könnte sie entlauben ...");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die steht da gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das gießt die Pflanze nicht.");
		}
		else Unhandled();
	}
}

/****************************
*   Regionen-Funktionen
****************************/

