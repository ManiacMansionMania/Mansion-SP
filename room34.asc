// Eds Zimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Eds Zimmer");
	Door[eDoorNumEd].Init(oTuer, hTuer);
	
	if ( gb_WiegeInEdsZimmer )
	{
		RemoveWalkableArea(2);
		cWiege.ChangeRoom(34);
		cWiege.Baseline = 180;
	}
	else
	{
		cWiege.ChangeRoom(-1);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumEd].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oHamster_AnyClick()
{
	if (any_click_move(178, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cEd )
			{
				player.Say("Mein Hamster.");
				player.FaceDirection(eDirectionDown);
				player.Say("Der hat schon viel durchmachen müssen.");
			}
			else
			{
				player.Say("Wie putzig.");
			}
			
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Er fühlt sich dort ganz wohl.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hBett_AnyClick()
{
	if (any_click_move(101, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEd.SayIfPlayer("Mein Bett.") )
			{
				player.Say("Netter Bettbezug. So romantisch.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist nicht tragbar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin nicht müde.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das hat keinen Bettkasten.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das möchte ich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht zum Bettbezug.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(304, 127, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sternenklare Nacht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche kein Fesnter. Außerdem ist es fest gemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das bleibt zu. Klar?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Klasse Idee. Das geht aber leider nur in Cartoons.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Pfft. Nein.");
		}
		else Unhandled();
	}
}

function hPlan_AnyClick()
{
	if (any_click_move(101, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEd.SayIfPlayer("Streng geheim!") )
			{
				player.Say("Sieht verrückt und verwirrend aus.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht in meiner Hosentasche.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Lass mal sehen.");
			Wait(5);
			player.Say("Ah ja ...");
			Wait(20);
			player.Say("Äh, nein, doch nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht so nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nö.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich verstehe den Plan kaum, geschweige denn, dass ich irgend was damit mache.");
		}
		else Unhandled();
	}
}

function hModelle_AnyClick()
{
	if (any_click_move(101, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEd.SayIfPlayer("Meine Modelle, mein ganzer Stolz.") )
			{
				player.Say("Tolle Modelle.");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse)
						|| UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.FaceDirection(eDirectionDown);
			player.Say("Da komme ich nicht ran.");
		}
		else Unhandled();
	}
}

function hWimpel_AnyClick()
{
	if (any_click_move(178, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wimpel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hSparschwein_AnyClick()
{
	if (any_click_move(245, 137, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cEd.SayIfPlayer("Mein treues Sparschwein Mr. Pig der Dritte.") )
			{
				player.Say("Ein Sparschwein.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das bleibt da stehen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
