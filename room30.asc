// Purpurs Zimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Purpurs Zimmer");
	Door[eDoorNumTentakelzimmer].Init(oTuer, hTuer);
	// keine Lukengrafik vorhanden, daher als null-pointer übergeben
	Door[eDoorNumGruensZimmer].Init(null, hNachOben);
	
	if ( Door[eDoorNumGruensZimmer].i_GlobalInt == 2 )
	{
		region[1].Enabled = false;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumTentakelzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}

function hNachOben_AnyClick()
{
	if ( Door[eDoorNumGruensZimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hFunkgeraet_AnyClick()
{
	if (any_click_move(261, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cEd.SayIfPlayer("So habe ich schon viele Freunde gefunden.");
			if ( player.IsEdison() && player != cEd )
			{
				player.Say("Ed sitzt da Tag und Nacht davor.");
			}
			if ( !player.IsEdison() )
			{
				player.Say("So kommunizierte man als es noch keine Handys gab.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist sehr schwer. Und momentan brauche ich das nicht. Also lasse ich es lieber stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.SayIfIsEdisonElse("Nein im Moment möchte ich nicht.", "Ich weiss nicht wie das geht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Lass mal gut sein.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das könnte die Unterlage zerkratzen.");
		}
		else Unhandled();
	}
}

function hKronleuchter_AnyClick()
{
	if (any_click_move(240, 132, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Überall hängen diese hässlichen Kronleuchter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das hässliche Ding? Mitnehmen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dazu gibt es Lichtschalter.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Den fasse ich nichtmal an.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(179, 142, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !player.SayIfIsEdison("Das Poster ist wohl nicht mehr aktuell.") )
			{
				player.Say("Lila Meteor!");
				player.FaceDirection(eDirectionDown);
				player.Say("Gesucht! Tot oder Lebendig!");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein, das brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich nicht mit dem Poster.");
		}
		else Unhandled();
	}
}

function hPortrait_AnyClick()
{
	if (any_click_move(116, 142, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(2);
			cEd.SayIfPlayer("Manchmal habe ich das Gefühl dass dieses Bild lebt.");
			cFred.SayIfPlayer("Manchmal habe ich das Gefühl dass dieses Bild lebt.");

			cEdna.SayIfPlayer("Wer ist denn diese Schönheit?");
			Wait(2);
			cEdna.FaceDirectionIfEdison(eDirectionDown);
			Wait(2);
			cEdna.SayIfPlayer("Das bin ja ich.");

			player.SayIfNotEdison("Eine heiße Krankenschwester.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wozu?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ne, lass mal stecken.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Bild hängt exakt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt sich nicht mit dem Bild.");
		}
		else Unhandled();
	}
}

function hBett_AnyClick()
{
	if (any_click_move(116, 142, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cPurple.SayIfPlayer("Mein Bett.") )
			{
				player.Say("Ein Bett.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist reichlich schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin nicht müde.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Darunter ist nur die Matraze.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Bett ist bereits sauber gemacht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das quietscht dann so.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann liegt das nur so auf dem Bett rum.");
		}
		else Unhandled();
	}
}

function hLeiter_AnyClick()
{
	if (any_click_move(50, 139, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Leiter.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Leiter.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Es reicht, da hin zu laufen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
