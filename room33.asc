// Tresorzimmer (Edison Mansion)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Tresorraum");
	Door[eDoorNumTresorzimmer].Init(oLuke, hLuke);

	/* Jetzt kommt die Taschenlampe */
	if ( gl_LichtTresorraum == 0 || gl_LichtTresorraum == 2 )
	{
		gFlashlight.Visible = true;
		v_Flashlight(false);
		Flashlight.Enabled = true;

		if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
		{
			v_Flashlight(true);
			Flashlight.Enabled = true;
			player.LoseInventory(iTaschenlampeOff);
			PlaySound(60);
			player.AddInventory(iTaschenlampeOn);
		}
	}
}

function room_Leave()
{
	Flashlight.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hLuke_AnyClick()
{
	if ( Door[eDoorNumTresorzimmer].ClickSpecial(2, 3, 1000, 0) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oBild_AnyClick()
{
	if (any_click_move(271, 136, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Geschickt versteckt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das muss den Tresor verdecken.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			if ( oSafe.Graphic == 539 )
			{
				oSafe.Graphic = 538;
				oSafe.X += Game.SpriteWidth[539] - Game.SpriteWidth[538];
				PlaySound(5);
				Wait(5);
			}
			oSafe.Visible = false;
			oBild.Visible = false;
			PlaySound(5);
			hBild.Enabled = true;
			RestoreWalkableArea(2);
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Das Bild ist schon aufgeklappt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich könnte was auf die Bildrückseite schreiben. KÖNNTE.");
		}
		else Unhandled();
	}
}

function oSafe_AnyClick()
{
	if (any_click_move(271, 136, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( oSafe.Graphic == 539 ) // Safe offen
			{
				player.Say("Leer.");
			}
			else if ( oSafe.Graphic == 538 ) // Safe geschlossen
			{
				player.SayIfIsEdison("Hier sind normalerweise Wertsachen von uns drin.");
				player.SayIfNotEdison("Oh, ein Tresor.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Klar, ein Taschentresor.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( oSafe.Graphic == 539 ) // Safe offen
			{
				player.Say("Da gibt es nichts zu benutzen, der ist schon auf.");
			}
			else if ( oSafe.Graphic == 538 ) // Safe geschlossen
			{
				player.Say("Ich sollte ihn vorher öffnen.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( oSafe.Graphic == 539 ) // Safe offen
			{
				player.Say("Der ist schon auf.");
			}
			else if ( oSafe.Graphic == 538 ) // Safe geschlossen
			{
				if ( player.IsEdison() )
				{
					PlaySound(1);
					oSafe.Graphic = 539;
					oSafe.X -= Game.SpriteWidth[539] - Game.SpriteWidth[538];
				}
				else
				{
					player.Say("Ich kenne die Kombination nicht.");
				}
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oSafe.Graphic == 539 ) // Safe offen
			{
				PlaySound(5);
				oSafe.Graphic = 538;
				oSafe.X += Game.SpriteWidth[539] - Game.SpriteWidth[538];
			}
			else if ( oSafe.Graphic == 538 ) // Safe geschlossen
			{
				player.Say("Der ist doch geschlossen.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Festgemauert in  der Wand,");
			player.Say("steckt der Tresor aus Stahl und Beton.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das möchte ich nicht in den Tresor legen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hBild_AnyClick()
{
	if (any_click_move(271, 136, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.SayIfIsEdison("Noch ein Verwandter von uns.");
			player.SayIfNotEdison("Was der wohl für einen Zahnazt hatte?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den will ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Benutzen? Nein danke.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			hBild.Enabled = false;
			PlaySound(1);
			oBild.Visible = true;
			oSafe.Visible = true;
			RemoveWalkableArea(2);
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ein Bild kann man nicht schließen. Zumindest denke ich das.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Stoff lässt sich leicht nach hinten drücken.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(166, 136, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Lampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die bleibt da schön stehen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( gl_LichtTresorraum == 0 ) // Licht aus
			{
				PlaySound(66);
				Flashlight.Enabled = false;
				gl_LichtTresorraum = 1;

				if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					player.LoseInventory(iTaschenlampeOn);
					player.AddInventory(iTaschenlampeOff);
				}
			}
			else if ( gl_LichtTresorraum == 1 ) // Licht an
			{
				PlaySound(66);
				Flashlight.Enabled = true;
				v_Flashlight(false);
				gl_LichtTresorraum = 0;

				if ( player.InventoryQuantity[iTaschenlampeOff.ID] )
				{
					v_Flashlight(true);
					player.LoseInventory(iTaschenlampeOff);
					player.AddInventory(iTaschenlampeOn);
				}
				else if ( player.InventoryQuantity[iTaschenlampeOn.ID] )
				{
					v_Flashlight(true);
				}
			}
			else if ( gl_LichtTresorraum == 2 ) // Licht kaputt
			{
				PlaySound(66);
				Wait(10);
				player.Say("Scheint kaputt zu sein.");
				Wait(10);
				PlaySound(66);
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das macht keinen Sinn.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(59, 136, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Fenster. Draussen ist es Nacht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das brauche ich nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
